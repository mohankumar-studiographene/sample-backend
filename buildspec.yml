version: 0.2

# env:
#   variables:
#     NODE_ENV: DEV

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - $(aws ecr get-login --region $AWS_DEFAULT_REGION --no-include-email)
      - REPOSITORY_URI=245277461642.dkr.ecr.us-east-1.amazonaws.com/sg-backend
      - echo Logging in to Docker Hub...
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
  build:
    commands:
      - bash
      - echo Build started on `date`
      # - export NODE_ENV=development
      # - export SWAGGER_URL=localhost:3001
      # - export PORT=3001
      # - export TYPEORM_CONNECTION=postgres
      # - export TYPEORM_HOST=
      # - export TYPEORM_USERNAME=
      # - export TYPEORM_PASSWORD=
      # - export TYPEORM_DATABASE=
      # - export TYPEORM_PORT=5432
      # - export TYPEORM_LOGGING=1
      # - export TYPEORM_MIGRATIONS = dist/database/migration/*.js
      # - export TYPEORM_MIGRATIONS_DIR = dist/database/migration/*.js
      # - export JWT_SECRET=abc
      - . ./source.env
      - envsubst < variables.env > subst.env
      - cat subst.env
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - printf '[{"name":"server","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
artifacts:
  files: imagedefinitions.json
